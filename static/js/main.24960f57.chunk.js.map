{"version":3,"sources":["components/square.jsx","components/svgs/o.jsx","components/svgs/x.jsx","components/board.jsx","game.js","index.js"],"names":["useStyles","makeStyles","gameButton","fontSize","height","fontweight","borderColor","maxwidth","maxHeight","minWidth","minHeight","Square","props","classes","Button","className","onClick","variant","color","value","O","aria-label","role","viewBox","stroke","d","X","class","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","step","setState","slice","concat","status","current","winner","drawFlag","filledNum","calculateDraw","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24960f57.chunk.js","sourcesContent":["import {Button, makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  gameButton: {\r\n    fontSize: '20px',\r\n    height: '64px',\r\n    fontweight: 'bold',\r\n    borderColor: '#12121266',\r\n    maxwidth: '90px',\r\n    maxHeight: '90px',\r\n    minWidth: '90px',\r\n    minHeight: '90px',\r\n    '@media(max-Width: 550px)' : {\r\n      maxwidth: '70px',\r\n      maxHeight: '70px',\r\n      minWidth: '70px',\r\n      minHeight: '70px'\r\n    },\r\n    '@media(max-Width: 420px)' : {\r\n      maxwidth: '50px',\r\n      maxHeight: '50px',\r\n      minWidth: '50px',\r\n      minHeight: '50px'\r\n    },\r\n    '&:hover' : {\r\n      borderColor: '#121212cc',\r\n    }\r\n  },\r\n});\r\n\r\nfunction Square(props) { \r\n  const classes = useStyles();\r\n    return (\r\n      <Button\r\n        className={classes.gameButton}\r\n        onClick={props.onClick}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        {props.value}\r\n      </Button>\r\n    )\r\n  }\r\n  \r\nexport default Square;","const O = () => {\r\n  return (\r\n    <svg\r\n      className=\"xo\"\r\n      aria-label=\"O\"\r\n      role=\"img\" \r\n      viewBox=\"0 0 128 128\" \r\n      stroke=\"#9B0000\"\r\n    >\r\n      <path d=\"M64,16A48,48 0 1,0 64,112A48,48 0 1,0 64,16\"/>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default O;","const X = () => {\r\n  return (\r\n    <svg\r\n      className=\"xo\"\r\n      aria-label=\"X\" \r\n      role=\"img\" \r\n      viewBox=\"0 0 128 128\" \r\n      stroke=\"#152238\"\r\n    >\r\n      <path class=\"hFJ9Ve\" d=\"M16,16L112,112\"/>\r\n      <path class=\"hFJ9Ve\" d=\"M112,16L16,112\"/>\r\n    </svg>\r\n );\r\n};\r\n\r\nexport default X;","import React from 'react';\r\nimport Square from './square';\r\nimport O from './svgs/o.jsx';\r\nimport X from './svgs/x.jsx';\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n      switch (this.props.squares[i]) {\r\n        case 'O':\r\n          return (\r\n            <Square\r\n              value={<O />}\r\n              onClick={() => this.props.onClick(i)}\r\n            />\r\n          )\r\n        case 'X':\r\n          return (\r\n            <Square\r\n              value={<X />}\r\n              onClick={() => this.props.onClick(i)}\r\n            />\r\n          )\r\n        default:\r\n          return (\r\n            <Square\r\n              value={this.props.squares[i]}\r\n              onClick={() => this.props.onClick(i)}\r\n            />\r\n          );\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Board;","import React from 'react';\r\nimport Board from './components/board';\r\nimport {Button} from '@material-ui/core';\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction calculateDraw(squares) {\r\n  let filledNum = 0;\r\n  for (let i = 0; i < squares.length; i++) {\r\n    if (squares[i] === 'X' || squares[i] === 'O') {\r\n      filledNum++;\r\n    }\r\n    else \r\n      break;\r\n  }\r\n  if (filledNum === 9) \r\n    return true;\r\n  return false;\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0\r\n    }\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    })\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState ({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const drawFlag = calculateDraw(current.squares);\r\n    let status;\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move ' + move + '.' :\r\n        'Start.';\r\n        return (\r\n          <li key={move}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => this.jumpTo(move)}\r\n            >\r\n              {desc}\r\n            </Button>\r\n          </li>\r\n        )\r\n    });\r\n\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else if (drawFlag) {\r\n      status = 'Draw!';\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares = {current.squares}\r\n            onClick = {(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"status\">{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\nexport default Game;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '@fontsource/roboto';\r\nimport Game from './game';\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <Game />\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}